#!/bin/bash
########################################
## set-sha512sum - Update the "sha512sum" array in a PKGBUILD
#
#     Copyright (c) 2018 - Timothy Savannah, All Rights Reserved
#       Licensed under terms of the APACHE License, Version 2.0
#
#      A copy to the latest-applicable license for pacman-utils
#       can be found at https://github.com/kata198/pacman-utils/blob/master/LICENSE
#
####################################################################################

usage() {
    USAGE_STR="$(cat <<EOT
set-sha512sum [filename]
  Sets the sha512sum source array within the PKGBUILD
   found in the current directory based on #filename provided.

Currently works on PKGBUILDS which contain a single file.
EOT
)"
    printf "%s\n" "${USAGE_STR}" >&2
}

# Look for '--help' first so we don't error out
#   if invalid args
for arg in "$@";
do
    if [ "${arg}" = "--help" -o "${arg}" = "-h" ];
    then
        usage;
        exit 0;
    fi
done

if [ $# -ne 1 ];
then
    if [ $# -eq 0 ];
    then
        printf "Not enough arguments.\n\n" >&2
        usage;
        exit 22; # 22 = EINVAL = Invalid Argument (No argument list too small...)
    else
        printf "Too many arguments.\n\n" >&2
        usage;
        exit 7; # 7 = E2BIG = Argument list too long
    fi
fi

FNAME="$1"
shift;

if [ ! -f "${FNAME}" ];
then
    printf "No such file: \"%s\"\n" "${FNAME}" >&2
    exit 2; # 2 = ENOENT = No such file or directory
fi

# _VERIFY_SUMS_PATTERN - Pattern to extraract the hash-sum verify array in PKGBUILD
#     Use with extended regex ( grep -E )
_VERIFY_SUMS_PATTERN='^[ \t]*[a-zA-Z][a-zA-Z]*[0-9][0-9]*sums=.*'

# Grab the old line
OLD_SUM_LINE="$(cat PKGBUILD | grep -E "${_VERIFY_SUMS_PATTERN}")"

# Extract the old format and value
OLD_SUM_FORMAT="$(printf "%s" "${OLD_SUM_LINE}" | sed -e 's/=.*//g' -e 's/sums$/sum/g')"
OLD_SUM="$(printf "%s" "${OLD_SUM_LINE}" | sed -e 's/^[^"]*"//g' -e 's/".*$//g')"

# Calculate the new value
NEW_SUM="$(sha512sum "${FNAME}" | awk {'print $1'})"

# Output the old format and value followed by the new format and value
printf "Old Sum <%s>: %s\nNew Sum <sha512sum>: %s\n\n" "${OLD_SUM_FORMAT}" "${OLD_SUM}" "${NEW_SUM}"

# Do the deed and replace the old array (any *sums) with new calculated sha512sums array
sed -e 's|'"${_VERIFY_SUMS_PATTERN}"'|sha512sums=("'"${NEW_SUM}"'")|g' -i PKGBUILD

# Extract the sums line from the PKGBUILD to verify all is good in the world
VERIFY_SUM="$(cat PKGBUILD | grep -E "${_VERIFY_SUMS_PATTERN}")"

# Print new contents for verification
printf "Verify PKGBUILD contents:\n%s\n\n" "${VERIFY_SUM}"


# vim: set ts=4 sw=4 st=4 expandtab :
